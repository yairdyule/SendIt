import { Profile, Error } from '../../lib/constants'
import { useState, useEffect } from 'react'
import { supabase as supa } from '../../lib/supabaseClient'
import { useAppDispatch } from '../../store/store'
import { PencilIcon } from '@heroicons/react/outline'
import {
  updateAvatar,
  updateBio,
  updateDisplayName,
  useAvatar,
  useBio,
  useDisplayName,
} from '../../store/profileSlice'
import EditModal from './EditModal'
import Avatar from './Avatar'
import Spinner from '../Spinner'

export default function Account() {
  const bio = useBio()
  const avatar = useAvatar()
  const displayName = useDisplayName()
  const dispatch = useAppDispatch()
  const session = supa.auth.session()

  const [loading, setLoading] = useState<boolean>(true)
  const [modal, setModal] = useState<boolean>(false)

  async function fetchUser() {
    try {
      setLoading(true)
      const dbUser = supa.auth.user()
      let { data, error } = await supa
        .from('profiles')
        .select('display_name, bio, id, avatar_url, updated_at')
        .eq('id', dbUser!.id)
        .single()

      if (error) throw error

      if (data) {
        setProfile(data as Profile)
      }
    } catch (error) {
      alert((error as Error)?.message)
    } finally {
      setLoading(false)
    }
  }
  function setProfile(profile: Profile) {
    dispatch(updateBio(profile.bio))
    dispatch(updateDisplayName(profile.display_name))
    dispatch(updateAvatar(profile.avatar_url))
  }

  useEffect(() => {
    fetchUser()
  }, [session])

  if (loading) {
    return <Spinner />
  }

  return (
    <div className="w-60 h-96 bg-slate-800 mx-auto pt-8 rounded-md">
      <div className="flex flex-col align-center items-center gap-1">
        <PencilIcon
          className="text-md hover:cursor-pointer h-6 w-6 text-slate-500 pt-1"
          onClick={() => setModal(true)}
        />
        <div className="flex flex-col justify-center items-center">
          <Avatar url={avatar} size={100} />
          <h1 className="pt-1 font-medium text-2xl text-slate-300">
            {displayName}
          </h1>
          <p className="text-slate-300">{bio}</p>
        </div>

        <div></div>

        {modal && <EditModal open={modal} setOpen={setModal} />}
      </div>
    </div>
  )
}
